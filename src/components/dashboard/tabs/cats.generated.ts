/* eslint-disable */ /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 * instead, edit one of the `.gql` files in the project.
 */

import * as Types from '../../../app/types.generated';

import { api } from '@src/app/baseApi';
(module as any).hot?.accept();
export type CreateCatMutationVariables = Types.Exact<{
  input: Types.CreateCatDto;
}>;

export type CreateCatMutation = {
  __typename?: 'Mutation';
  createCat: {
    __typename?: 'Cat';
    name: string;
    age: number;
    breed: string;
    id: string;
  };
};

export type GetMyCatsQueryVariables = Types.Exact<{ [key: string]: never }>;

export type GetMyCatsQuery = {
  __typename?: 'Query';
  myCats: Array<{
    __typename?: 'Cat';
    name: string;
    age: number;
    breed: string;
    id: string;
  }>;
};

export type GetCatsQueryVariables = Types.Exact<{ [key: string]: never }>;

export type GetCatsQuery = {
  __typename?: 'Query';
  cats: Array<{
    __typename?: 'Cat';
    name: string;
    age: number;
    breed: string;
    id: string;
    userId: string;
  }>;
};

export type DeleteCatMutationVariables = Types.Exact<{
  CatId: Types.Scalars['String'];
}>;

export type DeleteCatMutation = {
  __typename?: 'Mutation';
  deleteCat: { __typename?: 'Cat'; name: string };
};

export type GetUsersQueryVariables = Types.Exact<{
  Ids: Array<Types.Scalars['ID']> | Types.Scalars['ID'];
}>;

export type GetUsersQuery = {
  __typename?: 'Query';
  usersById: Array<{
    __typename?: 'User';
    name: string;
    username: string;
    id: string;
  }>;
};

export const CreateCatDocument = `
    mutation CreateCat($input: CreateCatDto!) {
  createCat(input: $input) {
    name
    age
    breed
    id
  }
}
    `;
export const GetMyCatsDocument = `
    query GetMyCats {
  myCats {
    name
    age
    breed
    id
  }
}
    `;
export const GetCatsDocument = `
    query GetCats {
  cats {
    name
    age
    breed
    id
    userId
  }
}
    `;
export const DeleteCatDocument = `
    mutation DeleteCat($CatId: String!) {
  deleteCat(input: $CatId) {
    name
  }
}
    `;
export const GetUsersDocument = `
    query GetUsers($Ids: [ID!]!) {
  usersById(Ids: $Ids) {
    name
    username
    id
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  overrideExisting: (module as any).hot?.status() === 'apply',
  endpoints: (build) => ({
    CreateCat: build.mutation<CreateCatMutation, CreateCatMutationVariables>({
      query: (variables) => ({ document: CreateCatDocument, variables }),
    }),
    GetMyCats: build.query<GetMyCatsQuery, GetMyCatsQueryVariables | void>({
      query: (variables) => ({ document: GetMyCatsDocument, variables }),
    }),
    GetCats: build.query<GetCatsQuery, GetCatsQueryVariables | void>({
      query: (variables) => ({ document: GetCatsDocument, variables }),
    }),
    DeleteCat: build.mutation<DeleteCatMutation, DeleteCatMutationVariables>({
      query: (variables) => ({ document: DeleteCatDocument, variables }),
    }),
    GetUsers: build.query<GetUsersQuery, GetUsersQueryVariables>({
      query: (variables) => ({ document: GetUsersDocument, variables }),
    }),
  }),
});

export { injectedRtkApi as api };
export const {
  useCreateCatMutation,
  useGetMyCatsQuery,
  useLazyGetMyCatsQuery,
  useGetCatsQuery,
  useLazyGetCatsQuery,
  useDeleteCatMutation,
  useGetUsersQuery,
  useLazyGetUsersQuery,
} = injectedRtkApi;
